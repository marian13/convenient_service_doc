"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[9869],{9236:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var o=i(4848),s=i(8453),r=i(6025);const t={slug:"/guides/advanced/logging/how_to_print_lib_logs",sidebar_position:1,title:"How to print library logs?"},l=void 0,c={id:"guides/advanced/logging/how_to_print_lib_logs",title:"How to print library logs?",description:"Log levels",source:"@site/docs/guides/advanced/logging/how_to_print_lib_logs.mdx",sourceDirName:"guides/advanced/logging",slug:"/guides/advanced/logging/how_to_print_lib_logs",permalink:"/guides/advanced/logging/how_to_print_lib_logs",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/guides/advanced/logging/how_to_print_lib_logs.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/guides/advanced/logging/how_to_print_lib_logs",sidebar_position:1,title:"How to print library logs?"},sidebar:"docs",previous:{title:"Logging",permalink:"/category/logging"},next:{title:"Deprecations",permalink:"/category/deprecations"}},d={},a=[{value:"Log levels",id:"log-levels",level:2},{value:"Colored logs",id:"colored-logs",level:2},{value:"Configuration via script",id:"configuration-via-script",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"log-levels",children:"Log levels"}),"\n",(0,o.jsxs)(n.p,{children:["It is possible to configure internal library logging by using the ",(0,o.jsx)(n.code,{children:"CONVENIENT_SERVICE_LOGGER_LEVEL"})," env variable."]}),"\n",(0,o.jsxs)(n.p,{children:["It is defaulting to ",(0,o.jsx)(n.code,{children:"info"}),", which is why the majority of the logs are skipped most of the time."]}),"\n",(0,o.jsxs)(n.p,{children:["But you can modify this behavior by setting a different ",(0,o.jsx)(n.a,{href:"https://ruby-doc.org/stdlib-2.7.0/libdoc/logger/rdoc/Logger/Severity.html",children:"severity level"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Just place the env variable in front of the command that starts your Ruby process which utilizes ",(0,o.jsx)(n.a,{href:"/",children:"Convenient Service"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"For example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"CONVENIENT_SERVICE_LOGGER_LEVEL=debug bundle exec rails console\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Since the ",(0,o.jsx)(n.a,{href:"/",children:"Convenient Service"})," logger is based on the ",(0,o.jsx)(n.a,{href:"https://github.com/ruby/logger",children:"Ruby stdlib Logger"}),", it supports the same levels."]}),"\n",(0,o.jsxs)(n.p,{children:["Here is the screenshot straight from its official ",(0,o.jsx)(n.a,{href:"https://ruby-doc.org/stdlib-2.7.0/libdoc/logger/rdoc/Logger.html",children:"docs"}),"."]}),"\n",(0,o.jsx)("img",{src:(0,r.Ay)("img/guides/advanced/how_to_print_lib_logs/log_levels.png")}),"\n",(0,o.jsxs)(n.admonition,{type:"warning",children:[(0,o.jsxs)(n.p,{children:["When your project uses ",(0,o.jsx)(n.a,{href:"https://github.com/ruby/logger/tree/v1.2.8.1",children:"Ruby stdlib Logger"})," with a version older than ",(0,o.jsx)(n.code,{children:"1.3.0"}),", then ",(0,o.jsx)(n.a,{href:"https://github.com/ruby/logger/commit/74690b87b15244e19dd91cd06ae295251e1e5781",children:"log levels as words are not supported yet"}),"."]}),(0,o.jsx)(n.p,{children:"Pass numbers in such cases."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"CONVENIENT_SERVICE_LOGGER_LEVEL=0 bundle exec rails console\n"})}),(0,o.jsx)("img",{src:(0,r.Ay)("img/guides/advanced/how_to_print_lib_logs/log_levels_as_numbers.png")})]}),"\n",(0,o.jsx)(n.h2,{id:"colored-logs",children:"Colored logs"}),"\n",(0,o.jsxs)(n.p,{children:["If you have ",(0,o.jsx)(n.a,{href:"https://github.com/janlelis/paint#setup",children:"Ruby Paint"})," gem as a dependency, and it is ",(0,o.jsx)(n.a,{href:"https://ruby-doc.org/core-2.7.0/Kernel.html#method-i-require",children:"required"}),", then ",(0,o.jsx)(n.code,{children:"CONVENIENT_SERVICE_LOGGER_ENABLE_COLORS"})," env variable activates coloring like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"CONVENIENT_SERVICE_LOGGER_LEVEL=0 CONVENIENT_SERVICE_LOGGER_ENABLE_COLORS=true bundle exec rails console\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configuration-via-script",children:"Configuration via script"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/",children:"Convenient Service"})," logger can be accessed inside any Ruby source as well."]}),"\n",(0,o.jsx)(n.p,{children:"For example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"ConvenientService.logger.level = Logger::INFO\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var o=i(6540);const s={},r=o.createContext(s);function t(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);