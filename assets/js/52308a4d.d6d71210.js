"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[5422],{5378:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=n(4848),a=n(8453);const o={slug:"/guides/usage/how_to_pass_value_to_step_class_or_instance_scope",sidebar_position:1,title:"How to pass a value to step from class/instance scope?"},c=void 0,i={id:"guides/usage/how_to_pass_value_to_step_class_or_instance_scope",title:"How to pass a value to step from class/instance scope?",description:"Let's consider the following service:",source:"@site/docs/guides/usage/how_to_pass_value_to_step_class_or_instance_scope.mdx",sourceDirName:"guides/usage",slug:"/guides/usage/how_to_pass_value_to_step_class_or_instance_scope",permalink:"/guides/usage/how_to_pass_value_to_step_class_or_instance_scope",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/guides/usage/how_to_pass_value_to_step_class_or_instance_scope.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/guides/usage/how_to_pass_value_to_step_class_or_instance_scope",sidebar_position:1,title:"How to pass a value to step from class/instance scope?"},sidebar:"docs",previous:{title:"How to use service steps?",permalink:"/guides/usage/how_to_use_steps"},next:{title:"Debugging",permalink:"/category/debugging"}},r={},l=[];function p(e){const s={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Let's consider the following service:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"class Service\n  # ...\n\n  step EscapeRegexp, \\\n    in: {pattern: ???}, # `???` is just a placeholder here, it is not a valid Ruby syntax.\n    out: :escaped\n\n  # ...\nend\n"})}),"\n",(0,t.jsxs)(s.p,{children:["We need to pass ",(0,t.jsx)(s.code,{children:'ENV["PATH_PATTERN"]'})," to the ",(0,t.jsx)(s.code,{children:"EscapeRegexp"})," step as the ",(0,t.jsx)(s.code,{children:"pattern"})," param."]}),"\n",(0,t.jsx)(s.p,{children:"How that can be achievable?"}),"\n",(0,t.jsx)(s.p,{children:"There are multiple ways:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Using ",(0,t.jsx)(s.code,{children:"raw"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'step EscapeRegexp, \\\n  in: {pattern: raw(ENV["PATH_PATTERN"])},\n  out: :escaped\n'})}),"\n",(0,t.jsxs)(s.p,{children:["This is how ",(0,t.jsx)(s.code,{children:"step"}),' call is "translated" to regular service invocation under the hood:']}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'def step_result\n  @step_result ||= EscapeRegexp.result(pattern: ENV["PATH_PATTERN"])\nend\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Since ",(0,t.jsx)(s.code,{children:"raw"})," is a ",(0,t.jsx)(s.a,{href:"https://rubyreferences.github.io/rubyref/language/methods-def.html#scope",children:"class method"})," you can pass it anything from the enclosing class scope."]}),"\n",(0,t.jsx)(s.p,{children:"The value is forwarded without any intermediate processing."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"step EscapeRegexp, \\\n  in: {pattern: raw(any_class_method)},\n  out: :escaped\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Using ",(0,t.jsx)(s.code,{children:"proc"})," form."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'step EscapeRegexp, \\\n  in: {pattern: -> { ENV["PATH_PATTERN"] }},\n  out: :escaped\n'})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"proc"})," form does not additionally process the passed value as well, but it is evaluated in the instance scope."]}),"\n",(0,t.jsx)(s.p,{children:"So you can access any service instance methods in it."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"step EscapeRegexp, \\\n  in: {pattern: -> { any_instance_method }},\n  out: :escaped\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["Check ",(0,t.jsx)(s.a,{href:"/basics/step_to_result_translation_table",children:"the Step to Result Translation table"})," for more detailed reference."]})})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>i});var t=n(6540);const a={},o=t.createContext(a);function c(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);