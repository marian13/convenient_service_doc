"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[1771,7918],{5162:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(7294),i=t(6010);const r="tabItem_Ymn6";function s(e){let{children:n,hidden:t,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,s),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7462),i=t(7294),r=t(6010),s=t(2389),o=t(7392),l=t(7094),c=t(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var n;const{lazy:t,block:s,defaultValue:p,values:m,groupId:_,className:v}=e,g=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??g.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,o.l)(b,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===p?p:p??(null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)??g[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:y}=(0,l.U)(),[w,C]=(0,i.useState)(f),N=[],{blockElementScrollPositionUntilNextRender:x}=(0,c.o5)();if(null!=_){const e=k[_];null!=e&&e!==w&&b.some((n=>n.value===e))&&C(e)}const E=e=>{const n=e.currentTarget,t=N.indexOf(n),a=b[t].value;a!==w&&(x(n),C(a),null!=_&&y(_,String(a)))},S=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{const n=N.indexOf(e.currentTarget)+1;t=N[n]??N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;t=N[n]??N[N.length-1];break}}null==(n=t)||n.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},v)},b.map((e=>{let{value:n,label:t,attributes:s}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,key:n,ref:e=>N.push(e),onKeyDown:S,onFocus:E,onClick:E},s,{className:(0,r.Z)("tabs__item",d,null==s?void 0:s.className,{"tabs__item--active":w===n})}),t??n)}))),t?(0,i.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==w})))))}function m(e){const n=(0,s.Z)();return i.createElement(p,(0,a.Z)({key:String(n)},e))}},8573:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(7410),i=t(7294),r=t(814);(void 0!==t.g?t.g:window).Prism=a.Z,t(9385);function s(e){let{children:n,...t}=e;return i.createElement(i.Fragment,null,i.createElement(r.Z,t,(e=>{let n=e.toString().split("\n");n=""===n[0]?n.slice(1):n;const t=n.find((e=>e.length)).search(/[^ ]/),a=-1===t?0:t;return n.map((e=>e.trimEnd())).map((e=>"-"===e.trimStart()?"":e)).map((e=>e.slice(a))).join("\n")})(n)))}},7664:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>_,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var a=t(7462),i=(t(7294),t(3905)),r=t(5488),s=t(5162),o=t(8573);const l={slug:"/guides/how_to_set_up_in_rails",sidebar_position:5,title:"Setup in a Rails project"},c=void 0,u={unversionedId:"guides/how_to_set_up_in_rails",id:"guides/how_to_set_up_in_rails",title:"Setup in a Rails project",description:"- As always, add a new entry to your Gemfile as the first step.",source:"@site/docs/guides/how_to_set_up_in_rails.mdx",sourceDirName:"guides",slug:"/guides/how_to_set_up_in_rails",permalink:"/convenient_service_docs/guides/how_to_set_up_in_rails",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/guides/how_to_set_up_in_rails.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{slug:"/guides/how_to_set_up_in_rails",sidebar_position:5,title:"Setup in a Rails project"},sidebar:"docs",previous:{title:"Guides",permalink:"/convenient_service_docs/category/guides"},next:{title:"Create custom config",permalink:"/convenient_service_docs/guides/how_to_create_custom_config"}},d={},p=[],m={toc:p};function _(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As always, add a new entry to your ",(0,i.kt)("a",{parentName:"p",href:"https://bundler.io/guides/gemfile.html"},"Gemfile")," as the first step."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},'gem "convenient_service", "~> 0.1.0"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Then run ",(0,i.kt)("a",{parentName:"p",href:"https://bundler.io/man/bundle-install.1.html"},"bundle")," to install the gem."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bundle install\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When you are following the ",(0,i.kt)("a",{parentName:"p",href:"https://tutorialspoint.com/ruby-on-rails/rails-directory-structure.htm"},"classic Rails folder structure"),", we recommend creating ",(0,i.kt)("inlineCode",{parentName:"p"},"app/services")," directory like so:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p app/services\n")),(0,i.kt)("p",{parentName:"li"},"Feel free to select any folder you like."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"app/services")," was chosen for a demonstration since it is ",(0,i.kt)("a",{parentName:"p",href:"https://guides.rubyonrails.org/autoloading_and_reloading_constants.html#config-autoload-paths"},"autoloaded")," by Rails.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Place a configuration file into it."),(0,i.kt)("p",{parentName:"li"},"A common name may be ",(0,i.kt)("inlineCode",{parentName:"p"},"application_service/config.rb"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p app/services/application_service && touch app/services/application_service/config.rb\n")),(0,i.kt)("p",{parentName:"li"},"This example utilizes ",(0,i.kt)("inlineCode",{parentName:"p"},"Standard")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Rails")," config, but you can also pick any other ",(0,i.kt)("a",{parentName:"p",href:"./basics/tldr"},"predefined configuration"),", ",(0,i.kt)("a",{parentName:"p",href:"./guides/how_to_create_custom_config"},"create customization"),", or even ",(0,i.kt)("a",{parentName:"p",href:"./basics/tldr"},"have multiple configs"),"."),(0,i.kt)(r.Z,{groupId:"config",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"standard",label:"Standard",default:!0,mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"ruby",title:"app/services/application_service/config.rb",mdxType:"CodeBlock"},"\n        module ApplicationService\n          module Config\n            def self.included(service_class)\n              service_class.include ConvenientService::Standard::Config\n            end\n          end\n        end\n      ")),(0,i.kt)(s.Z,{value:"rails",label:"Rails",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"ruby",title:"app/services/application_service/config.rb",mdxType:"CodeBlock"},"\n        ConvenientService::Dependencies.require_assigns_attributes_in_constructor_using_active_model_attribute_assignment\n        ConvenientService::Dependencies.require_has_attributes_using_active_model_attributes\n        ConvenientService::Dependencies.require_has_result_params_validations_using_active_model_validations\n        -\n        module ApplicationService\n          module Config\n            def self.included(service_class)\n              service_class.class_exec do\n                include ConvenientService::Standard::Config\n                -\n                concerns do\n                  use ConvenientService::Plugins::Common::AssignsAttributesInConstructor::UsingActiveModelAttributeAssignment::Concern\n                  use ConvenientService::Plugins::Common::HasAttributes::UsingActiveModelAttributes::Concern\n                  use ConvenientService::Plugins::Service::HasResultParamsValidations::UsingActiveModelValidations::Concern\n                end\n                -\n                middlewares :initialize do\n                  use ConvenientService::Plugins::Common::AssignsAttributesInConstructor::UsingActiveModelAttributeAssignment::Middleware\n                end\n                -\n                middlewares :result do\n                  use ConvenientService::Plugins::Service::HasResultParamsValidations::UsingActiveModelValidations::Middleware\n                end\n              end\n            end\n          end\n        end\n      ")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Now you have everything ready to create fancy services for your application."),(0,i.kt)("p",{parentName:"li"},"(Do not forget to include config into them \ud83d\ude42)"),(0,i.kt)(r.Z,{groupId:"config",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"standard",label:"Standard",default:!0,mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"ruby",title:"app/services/print_what_cow_says.rb",mdxType:"CodeBlock"},'\n        class PrintWhatCowSays\n          include ApplicationService::Config\n          -\n          attr_reader :text\n          -\n          def initialize(text: "Hello World!")\n            @text = text\n          end\n          -\n          def result\n            puts template(text)\n            -\n            success\n          end\n          -\n          private\n          -\n          ##\n          # Copied with \u2764\ufe0f from https://github.com/gaborbata/rosetta-cow\n          #\n          def template(text)\n            cloud =\n              <<~HEREDOC\n                 #{border(text, "_")}\n                < #{text} >\n                 #{border(text, "-")}\n              HEREDOC\n            -\n            cow =\n              <<~\'HEREDOC\'.split("\\n").map { |line| " " * 10 + line }.join("\\n")\n                        \\   ^__^\n                         \\  (oo)\\_______\n                            (__)\\       )\\/\\\n                                ||----w |\n                                ||     ||\n              HEREDOC\n            -\n            cloud + cow\n          end\n          -\n          def border(text, char)\n            char * (text.length + 2)\n          end\n        end\n      ')),(0,i.kt)(s.Z,{value:"rails",label:"Rails",mdxType:"TabItem"},(0,i.kt)(o.Z,{language:"ruby",title:"app/services/print_what_cow_says.rb",mdxType:"CodeBlock"},'\n        class PrintWhatCowSays\n          include ApplicationService::Config\n          -\n          attribute :text, :string, default: "Hello World!"\n          -\n          def result\n            puts template(text)\n            -\n            success\n          end\n          -\n          private\n          -\n          ##\n          # Copied with \u2764\ufe0f from https://github.com/gaborbata/rosetta-cow\n          #\n          def template(text)\n            cloud =\n              <<~HEREDOC\n                 #{border(text, "_")}\n                < #{text} >\n                 #{border(text, "-")}\n              HEREDOC\n            -\n            cow =\n              <<~\'HEREDOC\'.split("\\n").map { |line| " " * 10 + line }.join("\\n")\n                        \\   ^__^\n                         \\  (oo)\\_______\n                            (__)\\       )\\/\\\n                                ||----w |\n                                ||     ||\n              HEREDOC\n            -\n            cloud + cow\n          end\n          -\n          def border(text, char)\n            char * (text.length + 2)\n          end\n        end\n      ')))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"That's it. Happy coding!"))))}_.isMDXComponent=!0}}]);