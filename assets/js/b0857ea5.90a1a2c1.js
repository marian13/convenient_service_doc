"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[8998],{1104:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var r=a(4848),d=a(8453);const t={slug:"/glossary/advanced/proxy_middleware",sidebar_position:3,title:"Proxy Middleware"},s=void 0,i={id:"glossary/advanced/proxy_middleware",title:"Proxy Middleware",description:"A proxy middleware is a kind of middleware that may skip calling the next middleware in a chain.",source:"@site/docs/glossary/advanced/proxy_middleware.mdx",sourceDirName:"glossary/advanced",slug:"/glossary/advanced/proxy_middleware",permalink:"/glossary/advanced/proxy_middleware",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/glossary/advanced/proxy_middleware.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/glossary/advanced/proxy_middleware",sidebar_position:3,title:"Proxy Middleware"},sidebar:"docs",previous:{title:"Decorator Middleware",permalink:"/glossary/advanced/decorator_middleware"},next:{title:"Standard::V1::Config",permalink:"/glossary/advanced/standard_v1"}},o={},c=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"A proxy middleware is a kind of middleware that may skip calling the next middleware in a chain."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"CachesReturnValue"})," is a good example."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"module ConvenientService\n  module Common\n    module Plugins\n      module CachesReturnValue\n        class Middleware < Core::MethodChainMiddleware\n          # ...\n          # highlight-start\n          def next(*args, **kwargs, &block)\n            key = cache.keygen(:return_values, method, *args, **kwargs, &block)\n\n            cache.fetch(key) { chain.next(*args, **kwargs, &block) }\n          end\n          # highlight-end\n          # ...\n        end\n      end\n    end\n  end\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"When the cache does NOT contain any value by key, it calls the next middleware in the chain and stores its return value."}),"\n",(0,r.jsx)(n.p,{children:"When the cache already contains a value by key, it does NOT trigger the next middleware at all."}),"\n",(0,r.jsxs)(n.p,{children:["That is why this middleware is considered ",(0,r.jsx)(n.a,{href:"https://refactoring.guru/design-patterns/proxy",children:"proxy"})," middleware."]}),"\n",(0,r.jsxs)(n.p,{children:["In contrast, ",(0,r.jsx)(n.a,{href:"/glossary/advanced/decorator_middleware",children:"decorator middlewares"})," always call ",(0,r.jsx)(n.code,{children:"chain.next"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"cache.fetch"})," in ",(0,r.jsx)(n.code,{children:"CachesReturnValue"})," has the same semantics as Ruby's ",(0,r.jsx)(n.a,{href:"https://ruby-doc.org/core-3.1.2/Hash.html#method-i-fetch",children:"Hash#fetch"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var r=a(6540);const d={},t=r.createContext(d);function s(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);