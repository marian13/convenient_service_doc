"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[2290],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),m=i,g=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1336:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(7462),i=(t(7294),t(3905));const a={slug:"/troubleshooting/i_am_a_convenient_service_debuggerer",sidebar_position:1,title:"I am a Convenient Service debuggerer"},o=void 0,s={unversionedId:"troubleshooting/i_am_a_convenient_service_debuggerer",id:"troubleshooting/i_am_a_convenient_service_debuggerer",title:"I am a Convenient Service debuggerer",description:"My plugin is added to the config, but its middleware is never called",source:"@site/docs/troubleshooting/i_am_a_convenient_service_debuggerer.mdx",sourceDirName:"troubleshooting",slug:"/troubleshooting/i_am_a_convenient_service_debuggerer",permalink:"/convenient_service_docs/troubleshooting/i_am_a_convenient_service_debuggerer",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/troubleshooting/i_am_a_convenient_service_debuggerer.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/troubleshooting/i_am_a_convenient_service_debuggerer",sidebar_position:1,title:"I am a Convenient Service debuggerer"},sidebar:"docs",previous:{title:"Troubleshooting",permalink:"/convenient_service_docs/category/troubleshooting"},next:{title:"I18n.translate wrong number of arguments",permalink:"/convenient_service_docs/troubleshooting/i18n_translate_wrong_number_of_arguments"}},l={},d=[{value:"My plugin is added to the config, but its middleware is never called",id:"my-plugin-is-added-to-the-config-but-its-middleware-is-never-called",level:2}],c={toc:d};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"my-plugin-is-added-to-the-config-but-its-middleware-is-never-called"},"My plugin is added to the config, but its middleware is never called"),(0,i.kt)("p",null,"Some plugins are order-dependent."),(0,i.kt)("p",null,"For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"CanHaveSteps")," has a middleware for the instance ",(0,i.kt)("inlineCode",{parentName:"p"},"result")," method in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Standard")," config."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"middlewares :result do\n  # ...\n  use Plugins::Service::HasResult::Middleware\n  use Plugins::Service::CanHaveSteps::Middleware\n  # ...\n  use Plugins::Common::CachesReturnValue::Middleware\n  # ...\nend\n")),(0,i.kt)("p",null,"If your plugin enhances the instance ",(0,i.kt)("inlineCode",{parentName:"p"},"result")," method as well, you may be affected by ",(0,i.kt)("inlineCode",{parentName:"p"},"CanHaveSteps"),"."),(0,i.kt)("p",null,"How? Let's check its source."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"module ConvenientService\n  module Service\n    module Plugins\n      module CanHaveSteps\n        class Middleware < Core::MethodChainMiddleware\n          # highlight-start\n          def next(...)\n            return chain.next(...) if entity.steps.none?\n\n            last_step.result.copy\n          end\n          # highlight-end\n          # ...\n        end\n      end\n    end\n  end\nend\n")),(0,i.kt)("p",null,"It works as a ",(0,i.kt)("a",{parentName:"p",href:"/glossary/advanced/proxy_middleware"},"proxy middleware"),"."),(0,i.kt)("p",null,"When a service has no steps, ",(0,i.kt)("inlineCode",{parentName:"p"},"CanHaveSteps")," just calls what is next in the middleware chain, by ",(0,i.kt)("inlineCode",{parentName:"p"},"chain.next(...)"),"."),(0,i.kt)("p",null,"Otherwise, it returns the last step copy."),(0,i.kt)("p",null,"Let's place, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"HasResultParamsValidations::UsingActiveModelValidations")," plugin after ",(0,i.kt)("inlineCode",{parentName:"p"},"CanHaveSteps")," in your ",(0,i.kt)("a",{parentName:"p",href:"basics/tldr"},"application service config"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"module ApplicationService\n  module Config\n    include ConvenientService::Concern\n    -\n    included do\n      # highlight-start\n      include ConvenientService::Standard::Config\n      # ...\n      middlewares :result do\n        use ConvenientService::Plugins::Service::HasResultParamsValidations::UsingActiveModelValidations::Middleware\n      end\n      # highlight-end\n    end\n  end\nend\n")),(0,i.kt)("p",null,"This way ",(0,i.kt)("inlineCode",{parentName:"p"},"HasResultParamsValidations::UsingActiveModelValidations")," is never called for services with steps."),(0,i.kt)("p",null,"To fix that, locate it before ",(0,i.kt)("inlineCode",{parentName:"p"},"CanHaveSteps")," like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ruby"},"module ApplicationService\n  module Config\n    include ConvenientService::Concern\n    -\n    included do |service_class|\n      service_class.class_exec do\n        include ConvenientService::Standard::Config\n        # ...\n        middlewares :result do\n          # highlight-start\n          insert_before \\\n            ConvenientService::Plugins::Service::CanHaveSteps::Middleware,\n            ConvenientService::Plugins::Service::HasResultParamsValidations::UsingActiveModelValidations::Middleware\n          # highlight-end\n        end\n      end\n    end\n  end\nend\n")),(0,i.kt)("p",null,"Apart from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-before"},"insert_before"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-after"},"insert_after"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-after-each"},"insert_after_each"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-before-each"},"insert_before_each"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#replace"},"replace"),", and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#delete"},"delete")," are also available."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This page is inspired by ",(0,i.kt)("a",{parentName:"p",href:"https://tenderlovemaking.com/2016/02/05/i-am-a-puts-debuggerer.html#"},"I am a puts debuggerer")," and ",(0,i.kt)("a",{parentName:"p",href:"https://www.schneems.com/2016/01/25/ruby-debugging-magic-cheat-sheet.html"},"Ruby Debugging Magic Cheat Sheet"),".")))}u.isMDXComponent=!0}}]);