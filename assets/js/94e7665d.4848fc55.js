"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[9983],{4007:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var i=n(4848),r=n(8453);const t={slug:"/basics/services",sidebar_position:2,title:"Services"},o=void 0,c={id:"basics/services",title:"Services",description:"What is a service?",source:"@site/docs/basics/services.mdx",sourceDirName:"basics",slug:"/basics/services",permalink:"/basics/services",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/basics/services.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/basics/services",sidebar_position:2,title:"Services"},sidebar:"docs",previous:{title:"Basics",permalink:"/category/basics"},next:{title:"Results",permalink:"/basics/results"}},a={},l=[{value:"What is a service?",id:"what-is-a-service",level:2},{value:"Why do we need services?",id:"why-do-we-need-services",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"what-is-a-service",children:"What is a service?"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.em,{children:"Service"})," is an object that does only one operation, ",(0,i.jsx)(s.a,{href:"https://ludwig.guru/s/nothing+more+and+nothing+less",children:"nothing more, nothing less"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Service may usually be implemented as follows:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:"class Service\n  def call\n    # ...\n  end\nend\n"})}),"\n",(0,i.jsxs)(s.p,{children:["It has a single public method, often named ",(0,i.jsx)(s.a,{href:"https://blog.eq8.eu/article/ruby-call-method.html",children:(0,i.jsx)(s.code,{children:"call"})})," or ",(0,i.jsx)(s.code,{children:"run"}),", ",(0,i.jsx)(s.code,{children:"process"}),", ",(0,i.jsx)(s.code,{children:"perform"}),", etc, that is used to invoke its logic."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:"service = Service.new\n\nservice.call\n"})}),"\n",(0,i.jsx)(s.h2,{id:"why-do-we-need-services",children:"Why do we need services?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:"Hang on a minute!  According to the definition above, a service is almost the same as a regular function/method. Why do we need a new concept?"}),"\n",(0,i.jsx)(s.p,{children:"\u2014 A curious developer"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Usual Ruby methods may solve similar problems as services most of the time."}),"\n",(0,i.jsx)(s.p,{children:"Moreover, when it is possible to achieve the task only by using plain methods, it is almost always preferable."}),"\n",(0,i.jsx)(s.p,{children:"As a result, services should NOT be considered competitors or replacements for methods, they are additions to them."}),"\n",(0,i.jsx)(s.p,{children:"It is like a new option in the development toolbox."}),"\n",(0,i.jsx)(s.p,{children:"You have primitives, methods, classes, etc, and now there is an ability to use a service."}),"\n",(0,i.jsxs)(s.p,{children:["For example, removing duplicates from an array can be implemented in multiple ways, you decide whether to utilize an ",(0,i.jsx)(s.a,{href:"https://www.geeksforgeeks.org/remove-duplicates-sorted-array/?ref=lbp",children:"array"}),", ",(0,i.jsx)(s.a,{href:"https://www.geeksforgeeks.org/remove-duplicates-from-unsorted-array-using-map-data-structure/?ref=lbp",children:"hash"})," or a ",(0,i.jsx)(s.a,{href:"https://www.geeksforgeeks.org/remove-duplicates-from-unsorted-array-using-set-data-structure/",children:"set"}),", depending on your environment limitations."]}),"\n",(0,i.jsx)(s.p,{children:"The same case is with services. Just use them when you feel they bring advantages compared to other approaches."})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);