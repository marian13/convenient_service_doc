"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[5029],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return t?n.createElement(h,i(i({ref:r},u),{},{components:t})):n.createElement(h,i({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7352:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const o={slug:"/basics/errors",sidebar_position:4,title:"Errors"},i=void 0,s={unversionedId:"basics/errors",id:"basics/errors",title:"Errors",description:"What is an error?",source:"@site/docs/basics/errors.mdx",sourceDirName:"basics",slug:"/basics/errors",permalink:"/basics/errors",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/basics/errors.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{slug:"/basics/errors",sidebar_position:4,title:"Errors"},sidebar:"docs",previous:{title:"Service Goals",permalink:"/basics/service_goals"},next:{title:"Failures",permalink:"/basics/failures"}},c={},l=[{value:"What is an error?",id:"what-is-an-error",level:2}],u={toc:l};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-is-an-error"},"What is an error?"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Error")," is a result type caused either by the wrong input data (",(0,a.kt)("em",{parentName:"p"},"validation error"),") or by the exceptional behaviour (",(0,a.kt)("em",{parentName:"p"},"exception error"),")."),(0,a.kt)("p",null,"In some cases, it may be a validation rule violation, unsatisfied ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.c2.com/?ReplaceCommentWithAssertion"},"assertion"),", or unmet precondition based on the service arguments."),(0,a.kt)("p",null,"It is a responsibility of a developer/service user to provide correct inputs."),(0,a.kt)("p",null,"Otherwise, there is no sense in even starting any service processing."),(0,a.kt)("p",null,"Also errors are often semantically close to the ",(0,a.kt)("a",{parentName:"p",href:"https://ruby-doc.org/core-2.7.0/Exception.html"},"exceptions"),"."),(0,a.kt)("p",null,"In other words, service errors are frequently located at the same places where ",(0,a.kt)("a",{parentName:"p",href:"https://ruby-doc.org/core-2.7.0/Exception.html"},"exceptions")," are ",(0,a.kt)("a",{parentName:"p",href:"https://ruby-doc.com/docs/ProgrammingRuby/html/tut_exceptions.html"},"raised/rescued")," in the reqular methods."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Exceptional behaviour like HTTP connection issues, database inconsistencies, timeouts, etc are also errors.")),(0,a.kt)("p",null,"Check out the following example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'class EnsureFeatureActive\n  # ...\n  def initialize(name:)\n    @name = name\n  end\n\n  def result\n    return error("Feature name can NOT be `nil`") if name.nil?\n    return error("Unknown feature `#{name}`") unless Feature.exist?(name: name)\n\n    # ... Tricky and non trivial logic to ensure that feature is active...\n  rescue Feature::Exceptions::ConnectionTimeout => exception\n    return error("Feature `#{name}` connection timeout due to `#{exception.message}`")\n  end\nend\n')),(0,a.kt)("p",null,"And this is how it can be triggerred:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},'result = EnsureFeatureActive.result(name: "Fancy feature")\n\nif result.error?\n  # `result.message` is a string-like object with error reason.\n  result.message\nend\n')),(0,a.kt)("p",null,"There is no point to involve all the heavy machinery when the feature name is ",(0,a.kt)("inlineCode",{parentName:"p"},"nil"),"."),(0,a.kt)("p",null,"Why do we need to waste any expensive resources if the feature name is unknown?"),(0,a.kt)("p",null,"Can we guarantee whether the feature is actually active when a connection timeout happens?"),(0,a.kt)("p",null,"So, the one of the purposes of the error result is to say that the callers need to make adjustments in their code/config/dependency, not the service authors."))}p.isMDXComponent=!0}}]);