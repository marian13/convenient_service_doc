"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[7288],{4158:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=i(4848),s=i(8453);const r={slug:"/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",sidebar_position:2,title:"Assigns attributes in constructor using Dry::Initializer"},o=void 0,a={id:"api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",title:"Assigns attributes in constructor using Dry::Initializer",description:"It is so common to write constructors and attributes in Ruby like so:",source:"@site/docs/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer.mdx",sourceDirName:"api/plugins/common/assigns_attributes_in_constructor",slug:"/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",permalink:"/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",sidebar_position:2,title:"Assigns attributes in constructor using Dry::Initializer"},sidebar:"docs",previous:{title:"Assigns attributes in constructor",permalink:"/category/assigns-attributes-in-constructor"},next:{title:"Tests",permalink:"/category/tests"}},c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["It is so common to write ",(0,t.jsx)(n.a,{href:"https://ruby-doc.org/docs/ruby-doc-bundle/UsersGuide/rg/objinitialization.html",children:"constructors"})," and ",(0,t.jsx)(n.a,{href:"https://ruby-doc.com/docs/ProgrammingRuby/html/tut_classes.html",children:"attributes"})," in ",(0,t.jsx)(n.a,{href:"https://www.ruby-lang.org/en/",children:"Ruby"})," like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"class FormatHeader\n  include ApplicationService::Config\n\n  attr_reader :parsed_content, :skip_frozen_string_literal\n\n  def initialize(parsed_content:, skip_frozen_string_literal: false)\n    @parsed_content = parsed_content\n    @skip_frozen_string_literal = skip_frozen_string_literal\n  end\n  # ...\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.a,{href:"https://www.ruby-lang.org/en/",children:"Ruby"})," is your ",(0,t.jsx)(n.a,{href:"https://survey.stackoverflow.co/2022/#section-most-popular-technologies-programming-scripting-and-markup-languages",children:"day-to-day language"}),", such code probably seems too ",(0,t.jsx)(n.a,{href:"https://www.collinsdictionary.com/dictionary/english/routine",children:"routine"})," for you."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"class RunShell\n  include ApplicationService::Config\n\n  attr_reader :command, :debug\n\n  def initialize(command:, debug: false)\n    @command = command\n    @debug = debug\n  end\n  # ...\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Also, it is ",(0,t.jsx)(n.a,{href:"https://github.com/aemkei/jsfuck",children:"so annoying to make accidental typos"}),", when you are already tired, but you still have some stuff to complete."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, the word ",(0,t.jsx)(n.code,{children:"command"})," is typed 4 times in the example above, so there are 4 opportunities to make an automatic mistake."]}),"\n",(0,t.jsxs)(n.p,{children:["Please, don't even tell that ",(0,t.jsx)(n.a,{href:"https://www.reddit.com/r/software/comments/xeepud/dont_always_trust_what_your_ide_tells_you/",children:"your IDE handles that for you"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"When the whole team is feeling the same annoyance."}),"\n",(0,t.jsx)(n.p,{children:"All of the members really believe in the benefits of the removal of such repeatable code."}),"\n",(0,t.jsxs)(n.p,{children:["You may consider to utilizing the ",(0,t.jsx)(n.a,{href:"https://dry-rb.org/gems/dry-initializer/3.0/params-and-options/",children:"Dry::Initializer"})," integration that the ",(0,t.jsx)(n.a,{href:"/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",children:"AssignsAttributesInConstructor::UsingDryInitalizer"})," plugin provides."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"module ApplicationService\n  module Config\n    include ConvenientService::Concern\n\n    included do |service_class|\n      service_class.class_exec do\n        include ConvenientService::Standard::Config\n        # ...\n        concerns do\n          use ConvenientService::Plugins::Common::AssignsAttributesInConstructor::UsingDryInitalizer::Concern\n        end\n      end\n    end\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Thus, ",(0,t.jsx)(n.code,{children:"FormatHeader"})," and ",(0,t.jsx)(n.code,{children:"RunShell"})," can be reduced in the following way:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"class FormatHeader\n  include ApplicationService::Config\n\n  option :parsed_content\n  option :skip_frozen_string_literal, default: -> { false }\n  # ...\nend\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"class RunShell\n  include ApplicationService::Config\n\n  option :command\n  option :debug, default: -> { false }\n  # ...\nend\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://dry-rb.org/gems/dry-initializer/3.0/params-and-options/",children:"Dry::Initializer"})," does NOT call ",(0,t.jsx)(n.code,{children:"super"})," in its ",(0,t.jsx)(n.a,{href:"https://github.com/dry-rb/dry-initializer/blob/v3.1.1/lib/dry/initializer/mixin/root.rb#L11",children:"initialize"})," implementation."]}),(0,t.jsxs)(n.p,{children:["If it causes problems for you, try to place ",(0,t.jsx)(n.a,{href:"/api/plugins/common/assigns_attributes_in_constructor/using_dry_initializer",children:"AssignsAttributesInConstructor::UsingDryInitalizer"})," closer to the top in the concerns stack."]}),(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-before",children:"insert_before"}),"."]})]}),"\n",(0,t.jsxs)(n.admonition,{type:"danger",children:[(0,t.jsx)(n.p,{children:"Introduce new libraries to the projects only when you have strong arguments and complete ideas about why to do so."}),(0,t.jsx)(n.p,{children:"In fast-paced enterprise projects, with a poor onboarding process, simplicity is almost always a better choice."}),(0,t.jsx)(n.p,{children:"The simplicity in a sense, that the tech stack should be familiar to the people, who maintain the project for years."}),(0,t.jsx)(n.p,{children:'Since you probably won\'t have a chance to talk with the "one-task" developers while they remember the initial reasoning behind their code.'}),(0,t.jsx)(n.p,{children:"Moreover, that code is frequently left without any diagrams, documentation, or even tests \ud83d\ude10."})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);