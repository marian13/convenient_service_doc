"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[4428,7918],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,_=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return r?n.createElement(_,s(s({ref:t},l),{},{components:r})):n.createElement(_,s({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var c=2;c<i;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6915:(e,t,r)=>{r.d(t,{Z:()=>n});const n="0.19.1"},8573:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(7410),a=r(7294),i=r(814);(void 0!==r.g?r.g:window).Prism=n.Z,r(9385),r(6512);function s(e){let{children:t,...r}=e;return a.createElement(a.Fragment,null,a.createElement(i.Z,r,(e=>{let t=e.toString().split("\n");t=""===t[0]?t.slice(1):t;const r=t.find((e=>e.length)).search(/[^ ]/),n=-1===r?0:r;return t.map((e=>e.trimEnd())).map((e=>"-"===e.trimStart()?"":e)).map((e=>e.slice(n))).join("\n")})(t)))}},904:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>p,metadata:()=>c,toc:()=>u});var n=r(7462),a=(r(7294),r(3905)),i=r(8573),s=r(6915);const p={slug:"/guides/setup/how_to_set_up_in_rspec",sidebar_position:3,title:"Setup in RSpec"},o=void 0,c={unversionedId:"guides/setup/how_to_set_up_in_rspec",id:"guides/setup/how_to_set_up_in_rspec",title:"Setup in RSpec",description:"- As always, add a new entry to your Gemfile as the first step.",source:"@site/docs/guides/setup/how_to_set_up_in_rspec.mdx",sourceDirName:"guides/setup",slug:"/guides/setup/how_to_set_up_in_rspec",permalink:"/guides/setup/how_to_set_up_in_rspec",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/guides/setup/how_to_set_up_in_rspec.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/guides/setup/how_to_set_up_in_rspec",sidebar_position:3,title:"Setup in RSpec"},sidebar:"docs",previous:{title:"Setup in a Rails project",permalink:"/guides/setup/how_to_set_up_in_rails"},next:{title:"Setup in Minitest",permalink:"/guides/setup/how_to_set_up_in_minitest"}},l={},u=[],d={toc:u};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"As always, add a new entry to your ",(0,a.kt)("a",{parentName:"p",href:"https://bundler.io/guides/gemfile.html"},"Gemfile")," as the first step."),(0,a.kt)(i.Z,{language:"ruby",mdxType:"CodeBlock"},`gem "convenient_service", "~> ${s.Z}"`)),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Then run ",(0,a.kt)("a",{parentName:"p",href:"https://bundler.io/man/bundle-install.1.html"},"bundle")," to install the gem."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bundle install\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add the following line to your ",(0,a.kt)("a",{parentName:"p",href:"https://relishapp.com/rspec/rspec-core/docs"},"spec_helper.rb")," or ",(0,a.kt)("a",{parentName:"p",href:"https://relishapp.com/rspec/rspec-rails/docs"},"rails_helper.rb"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"ConvenientService::Dependencies.require_rspec_extentions\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"To ensure ",(0,a.kt)("a",{parentName:"p",href:"/"},"Convenient Service")," ",(0,a.kt)("a",{parentName:"p",href:"https://rspec.info"},"RSpec")," extentions are properly loaded, define a quick service, for example:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ruby",metastring:"title=lib/service.rb",title:"lib/service.rb"},"class Service\n  include ConvenientService::Standard::Config\n\n  def result\n    success\n  end\nend\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Create the specs for it."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ruby",metastring:"title=spec/service_spec.rb",title:"spec/service_spec.rb"},'RSpec.describe Service do\n  include ConvenientService::RSpec::Matchers::Results\n\n  example_group "class methods" do\n    describe ".result" do\n      let(:result) { described_class.result }\n\n      context "when `Service` is successful" do\n        it "returns `success`" do\n          expect(result).to be_success.of_service(described_class).with_data.without_step\n        end\n      end\n    end\n  end\nend\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Finally, run them."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"bundle exec rspec spec/service_spec.rb\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"That's it. Happy testing!"))))}m.isMDXComponent=!0}}]);