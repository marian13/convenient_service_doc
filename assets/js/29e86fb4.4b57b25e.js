"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[5261],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(n),f=s,m=p["".concat(c,".").concat(f)]||p[f]||l[f]||i;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,a=new Array(i);a[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2286:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=n(7462),s=(n(7294),n(3905));const i={slug:"/best_practices/fdd/cast_feature_arguments_inside_entries",sidebar_position:2,title:"Cast feature arguments inside entries"},a=void 0,o={unversionedId:"best_practices/fdd/cast_feature_arguments_inside_entries",id:"best_practices/fdd/cast_feature_arguments_inside_entries",title:"Cast feature arguments inside entries",description:"Usually, features have their own entities to represent their domain.",source:"@site/docs/best_practices/fdd/cast_feature_arguments_inside_entries.mdx",sourceDirName:"best_practices/fdd",slug:"/best_practices/fdd/cast_feature_arguments_inside_entries",permalink:"/best_practices/fdd/cast_feature_arguments_inside_entries",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/best_practices/fdd/cast_feature_arguments_inside_entries.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/best_practices/fdd/cast_feature_arguments_inside_entries",sidebar_position:2,title:"Cast feature arguments inside entries"},sidebar:"docs",previous:{title:"Describe feature public interface using entries",permalink:"/best_practices/fdd/describe_feature_public_interface_using_entries"},next:{title:"Advanced",permalink:"/category/advanced-1"}},c={},u=[],d={toc:u};function l(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Usually, features have their own entities to represent their domain."),(0,s.kt)("p",null,"Entry is the best place where outside-world objects can be cast into them."),(0,s.kt)("p",null,"For example, consider the ",(0,s.kt)("inlineCode",{parentName:"p"},"User")," entity for the ",(0,s.kt)("inlineCode",{parentName:"p"},"LoginSession")," feature."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ruby"},"module Features\n  class LoginSession\n    module Entities\n      class User\n        def initialize(email:, password:)\n          @email = email\n          @password = password\n        end\n\n        def self.cast(object)\n          if object.instance_of?(::User)\n            Entities::User.new(email: object.email_address, password: object.encrypted_password)\n          else\n            # ...\n          end\n        end\n\n        # ...\n      end\n    end\n  end\nend\n")),(0,s.kt)("p",null,"This is how an entry may convert a raw ",(0,s.kt)("inlineCode",{parentName:"p"},"user")," object into feature specific entity."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ruby"},"module Features\n  class LoginSession\n    include ConvenientService::Feature::Standard::Config\n\n    def start(**kwargs)\n      kwargs[:user] = Entities::User.cast(kwargs[:user])\n\n      Services::Login.result(**kwargs)\n    end\n  end\nend\n")))}l.isMDXComponent=!0}}]);