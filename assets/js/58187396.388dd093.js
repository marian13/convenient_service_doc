"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[6544],{9777:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=t(4848),s=t(8453),i=t(6025);const a={slug:"/glossary/fdd/entry",sidebar_position:1,title:"Entry"},o=void 0,l={id:"glossary/fdd/entry",title:"Entry",description:"Entry is a single part of the feature's public interface.",source:"@site/docs/glossary/fdd/entry.mdx",sourceDirName:"glossary/fdd",slug:"/glossary/fdd/entry",permalink:"/glossary/fdd/entry",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/glossary/fdd/entry.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/glossary/fdd/entry",sidebar_position:1,title:"Entry"},sidebar:"docs",previous:{title:"FDD",permalink:"/category/fdd-2"},next:{title:"Advanced",permalink:"/category/advanced-2"}},c={},d=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Entry"})," is a single part of the feature's ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Public_interface",children:"public interface"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Let's check the following feature class."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"module Application\n  module Features\n    class Gemfile\n      include ConvenientService::Feature::Standard::Config\n\n      entry :format do |path:|\n        Services::Format.result(path: path)\n      end\n\n      entry :lint do |path:|\n        Services::Lint.result(path: path)\n      end\n    end\n  end\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After a brief overview, you should start to have a high-level understanding of the goal of the ",(0,r.jsx)(n.code,{children:"Gemfile"})," feature and what to do with it in practice."]}),"\n",(0,r.jsx)(n.p,{children:"In this particular case, two abilities are available:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Formatting of a Gemfile (",(0,r.jsx)(n.code,{children:"entry :format"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Linting of a Gemfile (",(0,r.jsx)(n.code,{children:"entry :lint"}),")."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Calling of an entry is as simple as:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# Somewhere inside your codebase.\nApp::Features::Gemfile.format(path: "Gemfile")\n\nApp::Features::Gemfile.lint(path: "Gemfile")\n'})}),"\n",(0,r.jsx)(n.p,{children:"That's why people are often thinking about entries as something really close to Ruby's regular class methods."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"##\n# The actual entry.\n#\nentry :format do |path:|\n  Services::Format.result(path: path)\nend\n\n##\n# Just a mental concept to imagine entries as wrappers over class methods (under the hood they are something not so straightforward, but this is a topic for a different story).\n#\ndef self.format(path:)\n  Services::Format.result(path: path)\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Eventually, a list of entries may and must be considered as a ",(0,r.jsx)(n.a,{href:"https://refactoring.guru/design-patterns/facade",children:"Facade"})," in front of the complex system."]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"While having a code review of a new (or existing) feature, prefer to check its list of entries at the very beginning."}),(0,r.jsx)(n.p,{children:"This is the way to quickly get a summary of the feature and its main purpose."}),(0,r.jsxs)(n.p,{children:["In other words, to get so-called ",(0,r.jsx)(n.a,{href:"/glossary/clean_code",children:'"minimal context"'}),"."]}),(0,r.jsx)(n.p,{children:"After that, the intention of the internal feature services may become more obvious (hopefully \ud83d\ude42)."})]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"In order to find all feature triggers, just search for entries invocations using your favorite code editor."}),(0,r.jsx)("img",{src:(0,i.Ay)("./img/glossary/fdd/entry/search.png")})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);