"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[728],{2298:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=n(4848),i=n(8453);const t={slug:"/best_practices/avoid_error_shadowing",sidebar_position:2,title:"Avoid error shadowing"},o=void 0,a={id:"best_practices/avoid_error_shadowing",title:"Avoid error shadowing",description:"What is an error shadowing?",source:"@site/docs/best_practices/avoid_error_shadowing.mdx",sourceDirName:"best_practices",slug:"/best_practices/avoid_error_shadowing",permalink:"/best_practices/avoid_error_shadowing",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/best_practices/avoid_error_shadowing.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/best_practices/avoid_error_shadowing",sidebar_position:2,title:"Avoid error shadowing"},sidebar:"docs",previous:{title:"Best Practices",permalink:"/category/best-practices"},next:{title:"Service has only one `success`",permalink:"/best_practices/service_has_only_one_success"}},c={},l=[{value:"What is an error shadowing?",id:"what-is-an-error-shadowing",level:2},{value:"When does error shadowing happen with services?",id:"when-does-error-shadowing-happen-with-services",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"what-is-an-error-shadowing",children:"What is an error shadowing?"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.em,{children:"Error shadowing"})," is a hiding of the original cause of the problem."]}),"\n",(0,r.jsxs)(s.p,{children:["A common use case may be ",(0,r.jsx)(s.a,{href:"https://guides.rubyonrails.org/action_controller_overview.html#rescue",children:"always returning a 404 HTTP error code in production"}),", even when the real code is different."]}),"\n",(0,r.jsx)(s.p,{children:"This way you make it a little bit harder for a possible attacker to find security holes in your web application."}),"\n",(0,r.jsxs)(s.admonition,{type:"danger",children:[(0,r.jsxs)(s.p,{children:["A professional ",(0,r.jsx)(s.a,{href:"https://owasp.org/www-community/attacks/",children:"web attacker"})," may ",(0,r.jsx)(s.a,{href:"https://www.kali.org/",children:"easily exploit any kind of security vulnerabilities"}),"."]}),(0,r.jsx)(s.p,{children:"That is why it is so important to be extremely careful."}),(0,r.jsx)(s.p,{children:"Please, constantly impove your security skills."}),(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://guides.rubyonrails.org/security.html",children:"Securing Rails Applications"})," and ",(0,r.jsx)(s.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html",children:"OWASP: Ruby on Rails Cheat Sheet"})," are good places to revisit from time to time."]})]}),"\n",(0,r.jsxs)(s.p,{children:["Also it is popular to ",(0,r.jsx)(s.a,{href:"https://www.exceptionalcreatures.com/guides/advanced-rescue-and-raise#changing-exceptions",children:"rescue low-level exceptions"})," to encapsulate internal details from the end-user."]}),"\n",(0,r.jsxs)(s.p,{children:["The following example is taken directly from ",(0,r.jsx)(s.a,{href:"https://github.com/rails/rails/blob/v7.0.0/activestorage/lib/active_storage/service/gcs_service.rb#L56",children:"the Rails codebase"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:"def download_chunk(key, range)\n  instrument :download_chunk, key: key, range: range do\n    file_for(key).download(range: range).string\n  rescue Google::Cloud::NotFoundError\n    raise ActiveStorage::FileNotFoundError\n  end\nend\n"})}),"\n",(0,r.jsx)(s.p,{children:"As you can see, the original exception message is dropped and not reused anywhere."}),"\n",(0,r.jsx)(s.h2,{id:"when-does-error-shadowing-happen-with-services",children:"When does error shadowing happen with services?"}),"\n",(0,r.jsxs)(s.p,{children:["Using ",(0,r.jsx)(s.a,{href:"/",children:"Convenient Service"}),", you may encounter an error shadowing as well."]}),"\n",(0,r.jsx)(s.p,{children:"But as always, any approach may have advantages and disadvantages."}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://blog.hubspot.com/sales/for-example-synonym",children:"To illustrate"})," that, check the service below:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:'class MainService\n  # ...\n  def result\n    return error(message: "Something went wrong") unless sub_service_result.success?\n    # ...\n    success\n  end\n\n  private\n\n  def sub_service_result\n    @sub_service_result ||= SubService.result\n  end\n  # ...\nend\n'})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"MainService"})," looks innocent, but the problem starts to appear when you execute it."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:'result = MainService.result\n\nresult.success?\n# => false\n\nresult.message\n# => "Something went wrong"\n'})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"result.message"})," does NOT help to figure out what is actually wrong."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"SubService"})," is failing in reality, but it is NOT reflected in the outside world in any way."]}),"\n",(0,r.jsx)(s.p,{children:"If you don't want to intentionally confuse the service users or hide the internals from them, prefer to forward the original message."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:'class MainService\n  # ...\n  def result\n    # highlight-start\n    return error(message: "Something went wrong (#{sub_service_result.message})") unless sub_service_result.success?\n    # highlight-end\n    # ...\n    success\n  end\n  # ...\nend\n'})}),"\n",(0,r.jsxs)(s.p,{children:["It is also OK to immediately return ",(0,r.jsx)(s.code,{children:"SubService"})," result when you don't need to provide any additional text to its message, since it also avoids error shadowing."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:"class MainService\n  # ...\n  def result\n    # highlight-start\n    return sub_service_result unless sub_service_result.success?\n    # highlight-end\n    # ...\n    success\n  end\n  # ...\nend\n"})}),"\n",(0,r.jsxs)(s.p,{children:["But the best option is to utilize the ",(0,r.jsx)(s.code,{children:"step"})," macro."]}),"\n",(0,r.jsx)(s.p,{children:"It works as the previous example under the hood and when used frequently - helps to forget about error shadowing in the context of services completely."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:"class MainService\n  # highlight-start\n  step SubService\n  # highlight-end\n  # ...\n  def result\n    # highlight-start\n    # This line is removed...\n    # highlight-end\n    # ...\n    success\n  end\n  # ...\nend\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["If you are not safisfied how ",(0,r.jsx)(s.code,{children:"step"})," automatically prevents error shadowing - consider to create a plugin to extend/modify it."]})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var r=n(6540);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);