"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[4830],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>y});var s=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,s)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,s,n=function(e,r){if(null==e)return{};var t,s,n={},c=Object.keys(e);for(s=0;s<c.length;s++)t=c[s],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(s=0;s<c.length;s++)t=c[s],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var a=s.createContext({}),l=function(e){var r=s.useContext(a),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=l(e.components);return s.createElement(a.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return s.createElement(s.Fragment,{},r)}},_=s.forwardRef((function(e,r){var t=e.components,n=e.mdxType,c=e.originalType,a=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),_=l(t),y=n,v=_["".concat(a,".").concat(y)]||_[y]||u[y]||c;return t?s.createElement(v,i(i({ref:r},p),{},{components:t})):s.createElement(v,i({ref:r},p))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var c=t.length,i=new Array(c);i[0]=_;var o={};for(var a in r)hasOwnProperty.call(r,a)&&(o[a]=r[a]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var l=2;l<c;l++)i[l]=t[l];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}_.displayName="MDXCreateElement"},669:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var s=t(7462),n=(t(7294),t(3905));const c={slug:"/best_practices/try_services_always_return_success.mdx",sidebar_position:12,title:"Try-services always return success"},i=void 0,o={unversionedId:"best_practices/try_services_always_return_success",id:"best_practices/try_services_always_return_success",title:"Try-services always return success",description:"\u2757 This page is still a work in progress. More info is yet to come \u2757",source:"@site/docs/best_practices/try_services_always_return_success.mdx",sourceDirName:"best_practices",slug:"/best_practices/try_services_always_return_success.mdx",permalink:"/convenient_service_docs/best_practices/try_services_always_return_success.mdx",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/best_practices/try_services_always_return_success.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{slug:"/best_practices/try_services_always_return_success.mdx",sidebar_position:12,title:"Try-services always return success"},sidebar:"docs",previous:{title:"Don't provide data to `success` in boolean services.",permalink:"/convenient_service_docs/best_practices/no_success_data_in_boolean_services.mdx"},next:{title:"Start service names with a verb",permalink:"/convenient_service_docs/best_practices/start_service_names_with_verb.mdx"}},a={},l=[],p={toc:l};function u(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,s.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"\u2757 This page is still a work in progress. More info is yet to come \u2757")))}u.isMDXComponent=!0}}]);