"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[2998],{6221:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var t=n(4848),i=n(8453);const r={slug:"/basics/results",sidebar_position:3,title:"Results"},a=void 0,c={id:"basics/results",title:"Results",description:"Motivation behind results",source:"@site/docs/basics/results.mdx",sourceDirName:"basics",slug:"/basics/results",permalink:"/basics/results",draft:!1,unlisted:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/basics/results.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{slug:"/basics/results",sidebar_position:3,title:"Results"},sidebar:"docs",previous:{title:"Services",permalink:"/basics/services"},next:{title:"Service goals",permalink:"/basics/service_goals"}},l={},o=[{value:"Motivation behind results",id:"motivation-behind-results",level:2},{value:"So what is a Result? Its benefits?",id:"so-what-is-a-result-its-benefits",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"motivation-behind-results",children:"Motivation behind results"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://www.toptal.com/ruby-on-rails/rails-service-objects-tutorial",children:"Usually"}),", the service exposes a sole public method, let it be ",(0,t.jsx)(s.code,{children:"call"})," for this case."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"class Service\n  def call\n    # ...\n  end\nend\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Since Ruby is a ",(0,t.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Dynamic_programming_language",children:"dynamic language"}),", ",(0,t.jsx)(s.code,{children:"call"})," may return any type of value."]}),"\n",(0,t.jsxs)(s.p,{children:["Sometimes it is advantageous, for things like ",(0,t.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Duck_typing",children:"Duck Typing"}),", ",(0,t.jsx)(s.a,{href:"https://refactoring.guru/design-patterns/abstract-factory",children:"Abstract Factories"}),", ",(0,t.jsx)(s.a,{href:"https://sourcemaking.com/design_patterns/null_object",children:"Null Objects"}),", etc."]}),"\n",(0,t.jsx)(s.p,{children:"But occasionally it may also become problematic."}),"\n",(0,t.jsx)(s.p,{children:"For example, you can not implement a unified way to check whether the value was calculated correctly (as it was intended by its author)."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"value = service.call\n\nif value.any? # When an array.\nif value.cover?(0...100) # Range.\nif value.match(/^[0-9]*$/) # Regexp.\nif value.dig(:user, :address) # Hash.\nif value.nozero? # Integer....\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["Someone may consider ",(0,t.jsx)(s.a,{href:"https://api.rubyonrails.org/classes/Object.html#method-i-blank-3F",children:"Object#blank?"})," and its opposite ",(0,t.jsx)(s.a,{href:"https://api.rubyonrails.org/classes/Object.html#method-i-present-3F",children:"Object#present?"})," from ",(0,t.jsx)(s.a,{href:"https://guides.rubyonrails.org/active_support_core_extensions.html",children:"ActiveSupport"})," as an attempt, but they detect ",(0,t.jsx)(s.a,{href:"https://stackoverflow.com/a/20663389/12201472",children:"truthiness"})," in the Rails sense."]})}),"\n",(0,t.jsx)(s.p,{children:"Also it is common to forget to verify if the returned value is actually what you need:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"hash = service.call\n\nhash.merge(other_hash)\n# Expected a merge, but it raises since hash is nil...\n"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/",children:"Convenient Service"})," suggests utilizing Result objects as a way to overcome the problems listed above."]}),"\n",(0,t.jsx)(s.p,{children:"Practically speaking, to return results from all services."}),"\n",(0,t.jsxs)(s.p,{children:["To express this idea, let's create a different public method instead of ",(0,t.jsx)(s.code,{children:"call"})," and name it ",(0,t.jsx)(s.code,{children:"result"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"class Service\n  def result\n    # ...\n  end\nend\n"})}),"\n",(0,t.jsx)(s.p,{children:"Now, we have the following invocation:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"result = service.result\n\nif result.success?\n  result.data\nelse\n  result.message\nend\n"})}),"\n",(0,t.jsx)(s.h2,{id:"so-what-is-a-result-its-benefits",children:"So what is a Result? Its benefits?"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.em,{children:"Result"})," is a data structure that satisfies the following properties:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Firstly, it has a consolidated way to detect its state (",(0,t.jsx)(s.code,{children:"success?"}),", ",(0,t.jsx)(s.code,{children:"failure?"}),", ",(0,t.jsx)(s.code,{children:"error?"}),", and their counterparts with ",(0,t.jsx)(s.code,{children:"not"})," like ",(0,t.jsx)(s.code,{children:"not_success?"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Secondly, when the result is successful, you can be 100% sure that its data is correct, no additional verifications are needed (the notion of correctness is defined by the service author)."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Moveover, results induce you to always check them, before accessing their attributes, otherwise an exception is raised."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Also, when something goes wrong, the result contains a description of the reason (",(0,t.jsx)(s.code,{children:"result.message"}),"), which simplifies finding the source of the problem."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var t=n(6540);const i={},r=t.createContext(i);function a(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);