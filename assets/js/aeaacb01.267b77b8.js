"use strict";(self.webpackChunkconvenient_service_docs=self.webpackChunkconvenient_service_docs||[]).push([[2290],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(o,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(g,s(s({ref:t},d),{},{components:n})):r.createElement(g,s({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1336:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={slug:"/troubleshooting/i_am_a_convenient_service_debuggerer",sidebar_position:1,title:"I am a Convenient Service debuggerer"},s=void 0,l={unversionedId:"troubleshooting/i_am_a_convenient_service_debuggerer",id:"troubleshooting/i_am_a_convenient_service_debuggerer",title:"I am a Convenient Service debuggerer",description:"My plugin is added to the config, but its middleware is never called",source:"@site/docs/troubleshooting/i_am_a_convenient_service_debuggerer.mdx",sourceDirName:"troubleshooting",slug:"/troubleshooting/i_am_a_convenient_service_debuggerer",permalink:"/convenient_service_docs/troubleshooting/i_am_a_convenient_service_debuggerer",draft:!1,editUrl:"https://github.com/marian13/convenient_service_docs/blob/main/docs/troubleshooting/i_am_a_convenient_service_debuggerer.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/troubleshooting/i_am_a_convenient_service_debuggerer",sidebar_position:1,title:"I am a Convenient Service debuggerer"},sidebar:"docs",previous:{title:"Troubleshooting",permalink:"/convenient_service_docs/category/troubleshooting"},next:{title:"I18n.translate wrong number of arguments",permalink:"/convenient_service_docs/troubleshooting/i18n_translate_wrong_number_of_arguments"}},o={},c=[{value:"My plugin is added to the config, but its middleware is never called",id:"my-plugin-is-added-to-the-config-but-its-middleware-is-never-called",level:2}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"my-plugin-is-added-to-the-config-but-its-middleware-is-never-called"},"My plugin is added to the config, but its middleware is never called"),(0,a.kt)("p",null,"Some plugins are order-dependent."),(0,a.kt)("p",null,"For example, ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/service/has_result_steps"},"HasResultSteps")," has a middleware for the instance ",(0,a.kt)("inlineCode",{parentName:"p"},"result")," method in ",(0,a.kt)("a",{parentName:"p",href:"/api/configs/standard"},"the Standard config"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"middlewares :result do\n  # ...\n  use Plugins::Service::HasResult::Middleware\n  use Plugins::Service::HasResultSteps::Middleware\n  # ...\n  use Plugins::Common::CachesReturnValue::Middleware\n  # ...\nend\n")),(0,a.kt)("p",null,"If your plugin enhances the instance ",(0,a.kt)("inlineCode",{parentName:"p"},"result")," method as well, you may be affected by ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/service/has_result_steps"},"HasResultSteps"),"."),(0,a.kt)("p",null,"How? Let's check its source."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"module ConvenientService\n  module Service\n    module Plugins\n      module HasResultSteps\n        class Middleware < Core::MethodChainMiddleware\n          # highlight-start\n          def next(...)\n            return chain.next(...) if entity.steps.none?\n\n            last_step.result.copy\n          end\n          # highlight-end\n          # ...\n        end\n      end\n    end\n  end\nend\n")),(0,a.kt)("p",null,"It works as a ",(0,a.kt)("a",{parentName:"p",href:"/glossary/proxy_middleware"},"proxy middleware"),"."),(0,a.kt)("p",null,"When a service has no steps, ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/service/has_result_steps"},"HasResultSteps")," just calls what is next in the middleware chain, by ",(0,a.kt)("inlineCode",{parentName:"p"},"chain.next(...)"),"."),(0,a.kt)("p",null,"Otherwise, it returns the last step copy."),(0,a.kt)("p",null,"Let's place, e.g. ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/service/has_result_params_validations/using_active_model_validations"},"HasResultParamsValidations::UsingActiveModelValidations")," plugin after ",(0,a.kt)("a",{parentName:"p",href:"api/plugins/service/has_result_steps"},"HasResultSteps")," in your ",(0,a.kt)("a",{parentName:"p",href:"basics/tldr"},"application service config"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"module ApplicationService\n  module Config\n    def self.included(service_class)\n      service_class.class_exec do\n        # highlight-start\n        include ConvenientService::Standard::Config\n        # ...\n        middlewares :result do\n          use ConvenientService::Plugins::Service::HasResultParamsValidations::UsingActiveModelValidations::Middleware\n        end\n        # highlight-end\n      end\n    end\n  end\nend\n")),(0,a.kt)("p",null,"This way ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/service/has_result_params_validations/using_active_model_validations"},"HasResultParamsValidations::UsingActiveModelValidations")," is never called for services with steps."),(0,a.kt)("p",null,"To fix that, locate it before ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/service/has_result_steps"},"HasResultSteps")," like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ruby"},"module ApplicationService\n  module Config\n    def self.included(service_class)\n      service_class.class_exec do\n        include ConvenientService::Standard::Config\n        # ...\n        middlewares :result do\n          # highlight-start\n          insert_before \\\n            ConvenientService::Plugins::Service::HasResultSteps::Middleware,\n            ConvenientService::Plugins::Service::HasResultParamsValidations::UsingActiveModelValidations::Middleware\n          # highlight-end\n        end\n      end\n    end\n  end\nend\n")),(0,a.kt)("p",null,"Apart from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-before"},"insert_before"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-after"},"insert_after"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-after-each"},"insert_after_each"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#insert-before-each"},"insert_before_each"),", ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#replace"},"replace"),", and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Ibsciss/ruby-middleware/tree/v0.4.2#delete"},"delete")," are also available."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This page is inspired by ",(0,a.kt)("a",{parentName:"p",href:"https://tenderlovemaking.com/2016/02/05/i-am-a-puts-debuggerer.html#"},"I am a puts debuggerer")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.schneems.com/2016/01/25/ruby-debugging-magic-cheat-sheet.html"},"Ruby Debugging Magic Cheat Sheet"),".")))}u.isMDXComponent=!0}}]);